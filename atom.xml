<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tjoven.github.io</id>
    <title>Gridea</title>
    <updated>2020-11-29T16:27:44.292Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://tjoven.github.io"/>
    <link rel="self" href="https://tjoven.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://tjoven.github.io/images/avatar.png</logo>
    <icon>https://tjoven.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Git常用命令]]></title>
        <id>https://tjoven.github.io/post/git-chang-yong-ming-ling/</id>
        <link href="https://tjoven.github.io/post/git-chang-yong-ming-ling/">
        </link>
        <updated>2020-11-29T07:28:41.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="本地操作">本地操作</h1>
<h3 id="git-add-添加文件">Git add .                                添加文件</h3>
<h3 id="git-commit-m-commit文件">Git commit -m “”             commit文件</h3>
<h3 id="git-reset-hard-head-版本回退">Git reset --hard HEAD^      版本回退</h3>
<h3 id="git-reset-hard-hash-回退到某个版本">git reset --hard hash            回退到某个版本</h3>
<h3 id="git-log-版本历史">git log                                  版本历史</h3>
<h3 id="git-reflog-commit记录">git reflog                              commit记录</h3>
<h3 id="git-reset-head-file-从暂存区撤回">git reset HEAD file             从暂存区撤回</h3>
<h3 id="git-checkout-file-放弃工作区的修改">git checkout -- file              放弃工作区的修改</h3>
<h3 id="小节">小节</h3>
<p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。</p>
<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。</p>
<p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</p>
<h1 id="远程仓库">远程仓库</h1>
<h3 id="创建ssh-kye-ssh-keygen-t-rsa-c-youremailexamplecom">创建SSH Kye ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</h3>
<h3 id="git-remote-add-origin-gitserver-namepathrepo-namegit-关联远程仓库">git remote add origin git@server-name:path/repo-name.git   关联远程仓库</h3>
<h3 id="git-remote-远程仓库信息">git remote              远程仓库信息</h3>
<h3 id="git-push-origin-master-push远程仓库">git push origin master                                   push远程仓库</h3>
<h3 id="git-pull-origin-master-更新分支">git pull  origin master                       更新分支</h3>
<h3 id="git-pull-origin-master-rebase-更新分支没有分叉">git pull origin master   --rebase         更新分支，没有分叉</h3>
<h3 id="git-clone-克隆仓库">git clone                                                  克隆仓库</h3>
<h1 id="分支管理">分支管理</h1>
<h3 id="git-checkout-b-dev-创建并切换分支">git checkout -b dev            创建并切换分支</h3>
<h3 id="git-checkout-b-feature-origindev-创建远程dev的本地分支并切换">git checkout -b feature origin/dev    创建远程dev的本地分支，并切换</h3>
<h3 id="git-checkout-dev-切换分支">git checkout dev               切换分支</h3>
<h3 id="git-branch-dev-创建分支">git branch dev             创建分支</h3>
<h3 id="git-branch-d-dev-删除分支">git branch -d dev          删除分支</h3>
<h3 id="git-branch-d-dev-强制删除分支">git branch -D dev          强制删除分支</h3>
<h3 id="git-merge-dev-dev合并到当前分支">git merge dev           dev合并到当前分支</h3>
<h3 id="git-stash-commit之前的提交缓存起来保证工作区干净">git stash                 commit之前的提交缓存起来，保证工作区干净</h3>
<h3 id="git-stash-list-缓存列表">git stash list            缓存列表</h3>
<h3 id="git-stash-apply-stash0-取出缓存但不从列表删除">git stash apply stash@{0}     取出缓存，但不从列表删除</h3>
<h3 id="git-stash-pop-stash0-取出缓存同时从列表删除">git stash pop stash@{0}      取出缓存，同时从列表删除</h3>
<h3 id="git-cherry-pick-hash-复制一个commit到当前分支">git cherry-pick hash   复制一个commit到当前分支</h3>
<p>#标签管理</p>
<h3 id="git-tag-tag-当前分支最近一次提交之后-打标签">git tag  TAG    当前分支，最近一次提交之后 打标签</h3>
<h3 id="git-tag-标签列表">git tag          标签列表</h3>
<h3 id="git-tag-tag-has-每个commit之后-打标签">git tag TAG has  每个commit之后 打标签</h3>
<h3 id="git-show-tagname-查看标签信息">git show <tagName>  查看标签信息</h3>
<h3 id="git-push-origin-tagname-推送标签到远程">git push origin <tagName>  推送标签到远程</h3>
<h4 id="git手册"><a href="https://gitee.com/liaoxuefeng/learn-java/raw/master/teach/git-cheatsheet.pdf">Git手册</a></h4>
]]></summary>
        <content type="html"><![CDATA[<h1 id="本地操作">本地操作</h1>
<h3 id="git-add-添加文件">Git add .                                添加文件</h3>
<h3 id="git-commit-m-commit文件">Git commit -m “”             commit文件</h3>
<h3 id="git-reset-hard-head-版本回退">Git reset --hard HEAD^      版本回退</h3>
<h3 id="git-reset-hard-hash-回退到某个版本">git reset --hard hash            回退到某个版本</h3>
<h3 id="git-log-版本历史">git log                                  版本历史</h3>
<h3 id="git-reflog-commit记录">git reflog                              commit记录</h3>
<h3 id="git-reset-head-file-从暂存区撤回">git reset HEAD file             从暂存区撤回</h3>
<h3 id="git-checkout-file-放弃工作区的修改">git checkout -- file              放弃工作区的修改</h3>
<h3 id="小节">小节</h3>
<p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。</p>
<p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。</p>
<p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</p>
<h1 id="远程仓库">远程仓库</h1>
<h3 id="创建ssh-kye-ssh-keygen-t-rsa-c-youremailexamplecom">创建SSH Kye ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</h3>
<h3 id="git-remote-add-origin-gitserver-namepathrepo-namegit-关联远程仓库">git remote add origin git@server-name:path/repo-name.git   关联远程仓库</h3>
<h3 id="git-remote-远程仓库信息">git remote              远程仓库信息</h3>
<h3 id="git-push-origin-master-push远程仓库">git push origin master                                   push远程仓库</h3>
<h3 id="git-pull-origin-master-更新分支">git pull  origin master                       更新分支</h3>
<h3 id="git-pull-origin-master-rebase-更新分支没有分叉">git pull origin master   --rebase         更新分支，没有分叉</h3>
<h3 id="git-clone-克隆仓库">git clone                                                  克隆仓库</h3>
<h1 id="分支管理">分支管理</h1>
<h3 id="git-checkout-b-dev-创建并切换分支">git checkout -b dev            创建并切换分支</h3>
<h3 id="git-checkout-b-feature-origindev-创建远程dev的本地分支并切换">git checkout -b feature origin/dev    创建远程dev的本地分支，并切换</h3>
<h3 id="git-checkout-dev-切换分支">git checkout dev               切换分支</h3>
<h3 id="git-branch-dev-创建分支">git branch dev             创建分支</h3>
<h3 id="git-branch-d-dev-删除分支">git branch -d dev          删除分支</h3>
<h3 id="git-branch-d-dev-强制删除分支">git branch -D dev          强制删除分支</h3>
<h3 id="git-merge-dev-dev合并到当前分支">git merge dev           dev合并到当前分支</h3>
<h3 id="git-stash-commit之前的提交缓存起来保证工作区干净">git stash                 commit之前的提交缓存起来，保证工作区干净</h3>
<h3 id="git-stash-list-缓存列表">git stash list            缓存列表</h3>
<h3 id="git-stash-apply-stash0-取出缓存但不从列表删除">git stash apply stash@{0}     取出缓存，但不从列表删除</h3>
<h3 id="git-stash-pop-stash0-取出缓存同时从列表删除">git stash pop stash@{0}      取出缓存，同时从列表删除</h3>
<h3 id="git-cherry-pick-hash-复制一个commit到当前分支">git cherry-pick hash   复制一个commit到当前分支</h3>
<p>#标签管理</p>
<h3 id="git-tag-tag-当前分支最近一次提交之后-打标签">git tag  TAG    当前分支，最近一次提交之后 打标签</h3>
<h3 id="git-tag-标签列表">git tag          标签列表</h3>
<h3 id="git-tag-tag-has-每个commit之后-打标签">git tag TAG has  每个commit之后 打标签</h3>
<h3 id="git-show-tagname-查看标签信息">git show <tagName>  查看标签信息</h3>
<h3 id="git-push-origin-tagname-推送标签到远程">git push origin <tagName>  推送标签到远程</h3>
<h4 id="git手册"><a href="https://gitee.com/liaoxuefeng/learn-java/raw/master/teach/git-cheatsheet.pdf">Git手册</a></h4>
<!-- more -->
<h4 id="廖雪峰学git"><a href="https://www.liaoxuefeng.com/wiki/896043488029600/900062620154944">廖雪峰学Git</a></h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Effective Java 大纲]]></title>
        <id>https://tjoven.github.io/post/effective-java-da-gang/</id>
        <link href="https://tjoven.github.io/post/effective-java-da-gang/">
        </link>
        <updated>2020-11-28T16:15:35.000Z</updated>
        <content type="html"><![CDATA[<h2 id="第10章-并发">第10章 并发</h2>
<h3 id="第66条同步访问共享的可变数据">第66条：同步访问共享的可变数据</h3>
<ul>
<li>synchronized保证对象的同步性和可见性</li>
</ul>
<h3 id="第67条避免过度同步">第67条：避免过度同步</h3>
<ul>
<li>在被同步的区域内部，不要调用设计成要被覆盖的方法（这里一般指接口回调）</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://tjoven.github.io/post/hello-gridea/</id>
        <link href="https://tjoven.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>